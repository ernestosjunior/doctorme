// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  phone     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  patient Patient?
}

model Patient {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  phone     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId      String        @unique
  user        User          @relation(fields: [userId], references: [id])
  appointment Appointment[]
}

model Doctor {
  id           String  @id @default(cuid())
  firstName    String
  lastName     String
  city         String
  state        String
  speciality   String
  bio          String
  picture      String
  price        Float
  availability Boolean
  experience   String
  attendances  Int
  address      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  schedule    Schedule[]
  appointment Appointment[]
}

model Schedule {
  id        String   @id @default(cuid())
  date      DateTime
  available Boolean  @default(true)
  createdAt DateTime @default(now())

  doctorId String
  doctor   Doctor @relation(fields: [doctorId], references: [id])
}

model Appointment {
  id        String   @id @default(cuid())
  date      DateTime
  made      Boolean  @default(false)
  createdAt DateTime @default(now())

  patientId String
  doctorId  String

  patient Patient @relation(fields: [patientId], references: [id])
  doctor  Doctor  @relation(fields: [doctorId], references: [id])
}
